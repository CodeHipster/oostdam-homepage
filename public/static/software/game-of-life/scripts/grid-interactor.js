// Generated by CoffeeScript 2.5.1
(function() {
  // this file contains code for interacting with the grid.
  /*
  prerequisists: canvas cannot change, as a listener is attached
                 grid cannot change as the cellSize is used to calculate which tile is clicked.
  */
  // todo: draw the tile we are hovering above with a slight red color.
  define(['grid', 'jq-canvas', 'grid-visualizer', 'grid-tools', 'game-controller', 'jquery'], function(grid, jqCanvas, visualizer, gridTools, gameController, jquery) {
    /* Interactor object */
    var interactor, moduleName;
    moduleName = "grid-interactor";
    console.log(moduleName);
    console.log("gamecontroller (interactor):", gameController);
    interactor = {
      onClick: function(event) {
        var cell;
        console.log(moduleName, "clicked: ", event);
        cell = visualizer.getCellFromPixels(event.offsetX, event.offsetY);
        // check if cell falls within the grid.
        if (gridTools.isWithinGrid(grid.front, cell.x, cell.y)) {
          return grid.front[cell.x][cell.y] = !grid.front[cell.x][cell.y];
        }
      },
      onMouseMove: function(event) {
        var cell;
        //NOTE, cell could be outside of the grid.
        //console.log moduleName, "moved: ", event
        cell = visualizer.getCellFromPixels(event.offsetX, event.offsetY);
        return visualizer.hoverOverCell = cell;
      },
      onPauseClick: function(event) {
        console.log("after:", gameController.paused);
        gameController.paused = !gameController.paused;
        console.log(gameController.paused ? "play" : "pause");
        console.log(jquery(event.target).text());
        return jquery(event.target).text(gameController.paused ? "play" : "pause");
      }
    };
    jqCanvas.click(interactor.onClick);
    jqCanvas.mousemove(interactor.onMouseMove);
    jquery("#playPauseBtn").click(interactor.onPauseClick); //TODO: make an interface, we don't want to use the frontend in here.
    return interactor;
  });

}).call(this);
